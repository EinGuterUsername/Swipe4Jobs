<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="messenger.css" />
    <title>Messenger</title>
</head>

<body>
    <div class="container">
        <!-- Content wrapper start -->
        <div class="content-wrapper">
            <!-- Row start -->
            <div class="row gutters">
                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                    <div class="card m-0">
                        <!-- Row start -->
                        <div class="row no-gutters">
                            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-3 col-3">
                                <div class="container">
                                    <div class="contacts">
                                        <ul id="contactList" class="contactList">
                                            <!-- Contacts will be dynamically added here -->
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-8 col-lg-8 col-md-8 col-sm-9 col-9">
                                <div id="messageContainer" class="chat-container">
                                    <!-- Messages for selected contact will be dynamically added here -->
                                </div>
                                <form id="messageForm">
                                    <div class="form-group mt-3 mb-0">
                                        <textarea class="form-control" id="messageText" rows="3"
                                            placeholder="Type your message here..."></textarea>
                                        <button type="submit">Nachricht senden</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Skriptbereich für die Logik -->
    <script>
        function loadContactsAndMessages() {
    console.log("Funktion loadContactsAndMessages gestartet");

    fetch("/contactsandmessages")
        .then(response => {
            console.log("Fetch-Anfrage erfolgreich abgeschlossen");
            return response.json();
        })
        .then(data => {
            console.log("Empfangene Daten:", data);

            if (!data.userData || !data.contacts) {
                console.error("Fehlerhafte Datenstruktur: Benutzerdaten oder Kontakte fehlen.");
                return;
            }

            renderContactsAndMessages(data);
        })
        .catch(error => console.error("Fehler beim Laden der Kontakte und Nachrichten:", error));
}

        function renderContactsAndMessages(data) {
            const contactList = document.getElementById("contactList");
            contactList.innerHTML = ""; // Vorherige Kontakte löschen
            for (const contact of data.contacts) {
                const contactItem = document.createElement("li");
                contactItem.textContent = contact.name;
                contactItem.addEventListener("click", () => {
                    renderMessages(contact.messages);
                });
                contactList.appendChild(contactItem);
            }

            const firstContact = data.contacts[0];
            if (firstContact) {
                renderMessages(firstContact.messages);
            }
        }

        function renderMessages(messages) {
            const messageContainer = document.getElementById("messageContainer");
            messageContainer.innerHTML = ""; // Vorherige Nachrichten löschen
            for (const message of messages) {
                const messageDiv = document.createElement("div");
                messageDiv.classList.add("message");
                messageDiv.textContent = message.text;
                messageContainer.appendChild(messageDiv);
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            const messageForm = document.getElementById("messageForm");
            if (messageForm) {
                messageForm.addEventListener("submit", function (event) {
                    event.preventDefault(); // Standardverhalten des Formulars verhindern
                    const messageText = document.getElementById("messageText").value;
                    fetch("/sendmessage", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({ messageText })
                    })
                        .then(response => {
                            if (response.ok) {
                                console.log("Nachricht erfolgreich gesendet");
                                loadContactsAndMessages();
                            } else {
                                console.error("Fehler beim Senden der Nachricht:", response.statusText);
                            }
                        })
                        .catch(error => {
                            console.error("Fehler beim Senden der Nachricht:", error);
                        });
                });
            } else {
                console.error("Formular mit ID 'messageForm' nicht gefunden.");
            }

            loadContactsAndMessages();
        });
    </script>
</body>

</html>